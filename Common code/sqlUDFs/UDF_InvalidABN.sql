GO
DECLARE @func_name VARCHAR(255) = 'UDF_InvalidABN'
IF OBJECT_ID(@func_name) IS NULL
BEGIN
	EXEC('CREATE FUNCTION '+@func_name+'() RETURNS INT AS BEGIN RETURN 1 END')
END
GO
ALTER FUNCTION UDF_InvalidABN(@ABN AS NVARCHAR(255))
RETURNS INT
AS
----------------------------------------------------------------
----------------------------------------------------------------
/*
Script Purpose:
Checks whether an ABN is valid and outputs 1 if it is not and 0 if it is

*/
----------------------------------------------------------------
----------------------------------------------------------------
BEGIN 

SELECT @ABN=LTRIM(RTRIM(REPLACE(@ABN,' ','')))

DECLARE @ABN1 NVARCHAR(2) = SUBSTRING(@ABN,1,1)
DECLARE @ABN2 NVARCHAR(2) = SUBSTRING(@ABN,2,1)
DECLARE @ABN3 NVARCHAR(2) = SUBSTRING(@ABN,3,1)
DECLARE @ABN4 NVARCHAR(2) = SUBSTRING(@ABN,4,1)
DECLARE @ABN5 NVARCHAR(2) = SUBSTRING(@ABN,5,1)
DECLARE @ABN6 NVARCHAR(2) = SUBSTRING(@ABN,6,1)
DECLARE @ABN7 NVARCHAR(2) = SUBSTRING(@ABN,7,1)
DECLARE @ABN8 NVARCHAR(2) = SUBSTRING(@ABN,8,1)
DECLARE @ABN9 NVARCHAR(2) = SUBSTRING(@ABN,9,1)
DECLARE @ABN10 NVARCHAR(2) = SUBSTRING(@ABN,10,1)
DECLARE @ABN11 NVARCHAR(2) = SUBSTRING(@ABN,11,1)

DECLARE @ABN_SCORE INT
SELECT @ABN_SCORE=((TRY_CAST(@ABN1 AS INT)-1)*10 + 
		(TRY_CAST(@ABN2 AS INT)*1+
		TRY_CAST(@ABN3 AS INT)*3+
		TRY_CAST(@ABN4 AS INT)*5+
		TRY_CAST(@ABN5 AS INT)*7+
		TRY_CAST(@ABN6 AS INT)*9+
		TRY_CAST(@ABN7 AS INT)*11+
		TRY_CAST(@ABN8 AS INT)*13+
		TRY_CAST(@ABN9 AS INT)*15+
		TRY_CAST(@ABN10 AS INT)*17+
		TRY_CAST(@ABN11 AS INT)*19))

--NULL OR BLANK ABNS
IF ISNULL(@ABN,'')=''
BEGIN
RETURN 1
END

--INCORRECT LENGTH
ELSE IF LEN(@ABN)<>11
BEGIN
RETURN 1
END

--NON-NUMERIC ABNS
ELSE IF ISNULL(CAST(dbo.UDF_NumbersOnly_Alternative(@ABN) AS NVARCHAR(255)),'')<>@ABN
BEGIN
RETURN 1
END

--PASSES ALGORITHM
ELSE IF @ABN_SCORE%89=0
BEGIN
RETURN 0
END

--OTHERWISE FAILS (I.E. FAILS ALGORITHM)

RETURN 1



END
